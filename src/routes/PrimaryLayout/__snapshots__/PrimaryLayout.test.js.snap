// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shows DownloadAppModal if the user is on mobile 1`] = `
<div
  data-stylename="container"
>
  <Connect(Drawer)
    data-stylename="drawer hidden"
  />
  <Connect(TopNav)
    data-stylename="top"
    onClick={[Function]}
  />
  <div
    data-stylename="main"
    onClick={[Function]}
  >
    <withRouter(Connect(Navigation))
      collapsed={false}
      data-stylename="left"
      showTopics={true}
    />
    <div
      data-stylename="center"
      id="center-column"
    >
      <RedirectToSignupFlow
        pathname="path"
      />
      <RedirectToCommunity
        path="/"
      />
      <RedirectToCommunity
        path="/app"
      />
      <Switch>
        <Route
          exact={true}
          path="/c/:slug/tag/:topicName"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/c/:slug/join/:accessCode/tag/:topicName"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/p/:postId"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/u/:id"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/c/:slug/about"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/c/:slug/people"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/c/:slug/invite"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/c/:slug/events"
          render={[Function]}
        />
        <Route
          component={[Function]}
          exact={true}
          path="/tag/:topicName"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/all"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/all/:postTypeContext(project|p)"
        />
        <Route
          component={[Function]}
          path="/all/:postTypeContext(project|p)/:postId"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/all/:topicName"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/c/:slug"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/c/:slug/:postTypeContext(project|p)"
        />
        <Route
          component={[Function]}
          path="/c/:slug/members"
        />
        <Route
          component={[Function]}
          path="/c/:slug/m/:id"
        />
        <Route
          component={[Function]}
          path="/c/:slug/:postTypeContext(project|p)/:postId"
        />
        <Route
          component={[Function]}
          path="/c/:slug/settings"
        />
        <Route
          component={[Function]}
          path="/c/:slug/topics"
        />
        <Route
          component={[Function]}
          path="/c/:slug/:topicName/:postTypeContext(project|p)/:postId"
        />
        <Route
          component={[Function]}
          path="/c/:slug/:topicName"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/n/:networkSlug"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/n/:networkSlug/:postTypeContext(project|p)"
        />
        <Route
          component={[Function]}
          path="/n/:networkSlug/:postTypeContext(project|p)/:postId"
        />
        <Route
          component={[Function]}
          path="/n/:networkSlug/members"
        />
        <Route
          component={[Function]}
          path="/n/:networkSlug/m/:id"
        />
        <Route
          component={[Function]}
          path="/n/:networkSlug/settings"
        />
        <Route
          component={[Function]}
          path="/n/:networkSlug/communities"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/n/:networkSlug/:topicName"
        />
        <Route
          component={[Function]}
          path="/m/:id"
        />
        <Route
          component={[Function]}
          path="/events"
        />
        <Route
          component={[Function]}
          path="/settings"
        />
        <Route
          component={[Function]}
          path="/search"
        />
        <Route
          component={[Function]}
          key="/signup/upload-photo"
          path="/signup/upload-photo"
        />
        <Route
          component={[Function]}
          key="/signup/add-location"
          path="/signup/add-location"
        />
        <Route
          component={[Function]}
          key="/signup/add-skills"
          path="/signup/add-skills"
        />
        <Route
          component={[Function]}
          key="/signup/review"
          path="/signup/review"
        />
        <Route
          component={[Function]}
          key="/create-community/name/:networkId"
          path="/create-community/name/:networkId"
        />
        <Route
          component={[Function]}
          key="/create-community/name"
          path="/create-community/name"
        />
        <Route
          component={[Function]}
          key="/create-community/domain"
          path="/create-community/domain"
        />
        <Route
          component={[Function]}
          key="/create-community/review"
          path="/create-community/review"
        />
      </Switch>
    </div>
    <div
      data-stylename="sidebar"
    >
      <Route
        component={[Function]}
        exact={true}
        path="/c/:slug"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/c/:slug/:postTypeContext(project|p)/new"
      />
      <Route
        component={[Function]}
        path="/c/:slug/m/:id"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/c/:slug/:topicName"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/c/:slug/:topicName/:postTypeContext(project|p)/new"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/n/:networkSlug"
      />
      <Route
        component={[Function]}
        path="/n/:networkSlug/m/:id"
      />
      <Route
        component={[Function]}
        path="/m/:id"
      />
    </div>
    <div
      data-stylename="detail hidden"
      id="detail-column"
    >
      <Route
        component={[Function]}
        key="/events/:eventId"
        path="/events/:eventId"
      />
      <Route
        component={[Function]}
        key="/all/:postTypeContext(project|p)/:postId(\\\\d+)"
        path="/all/:postTypeContext(project|p)/:postId(\\\\d+)"
      />
      <Route
        component={[Function]}
        key="/c/:slug/:postTypeContext(project|p)/:postId(\\\\d+)"
        path="/c/:slug/:postTypeContext(project|p)/:postId(\\\\d+)"
      />
      <Route
        component={[Function]}
        key="/n/:networkSlug/:postTypeContext(project|p)/:postId(\\\\d+)"
        path="/n/:networkSlug/:postTypeContext(project|p)/:postId(\\\\d+)"
      />
      <Route
        component={[Function]}
        key="/c/:slug/m/:id/:postTypeContext(project|p)/:postId(\\\\d+)"
        path="/c/:slug/m/:id/:postTypeContext(project|p)/:postId(\\\\d+)"
      />
      <Route
        component={[Function]}
        key="/c/:slug/:topicName/:postTypeContext(project|p)/:postId(\\\\d+)"
        path="/c/:slug/:topicName/:postTypeContext(project|p)/:postId(\\\\d+)"
      />
      <Route
        component={[Function]}
        key="/n/:networkSlug/m/:id/:postTypeContext(project|p)/:postId(\\\\d+)"
        path="/n/:networkSlug/m/:id/:postTypeContext(project|p)/:postId(\\\\d+)"
      />
    </div>
  </div>
  <Route
    component={[Function]}
    path="/t"
  />
  <Connect(SocketListener)
    location={
      Object {
        "pathname": "path",
      }
    }
  />
  <Connect(SocketSubscriber)
    type="community"
  />
  <Intercom
    appID={null}
  />
  <Route
    exact={true}
    key="/all/:postTypeContext(project|p)/new"
    path="/all/:postTypeContext(project|p)/new"
  />
  <Route
    exact={true}
    key="/c/:slug/:postTypeContext(project|p)/new"
    path="/c/:slug/:postTypeContext(project|p)/new"
  />
  <Route
    exact={true}
    key="/c/:slug/:topicName/:postTypeContext(project|p)/new"
    path="/c/:slug/:topicName/:postTypeContext(project|p)/new"
  />
  <Route
    exact={true}
    key="/all/:postTypeContext(project|p)/:postId/edit"
    path="/all/:postTypeContext(project|p)/:postId/edit"
  />
  <Route
    exact={true}
    key="/c/:slug/:postTypeContext(project|p)/:postId/edit"
    path="/c/:slug/:postTypeContext(project|p)/:postId/edit"
  />
  <Route
    exact={true}
    key="/c/:slug/m/:id/:postTypeContext(project|p)/:postId/edit"
    path="/c/:slug/m/:id/:postTypeContext(project|p)/:postId/edit"
  />
  <Route
    exact={true}
    key="/c/:slug/:topicName/:postTypeContext(project|p)/:postId/edit"
    path="/c/:slug/:topicName/:postTypeContext(project|p)/:postId/edit"
  />
  <Route
    exact={true}
    key="/n/:networkSlug/:postTypeContext(project|p)/new"
    path="/n/:networkSlug/:postTypeContext(project|p)/new"
  />
  <Route
    exact={true}
    key="/n/:networkSlug/:postTypeContext(project|p)/:postId/edit"
    path="/n/:networkSlug/:postTypeContext(project|p)/:postId/edit"
  />
  <Route
    exact={true}
    key="/n/:networkSlug/m/:id/:postTypeContext(project|p)/:postId/edit"
    path="/n/:networkSlug/m/:id/:postTypeContext(project|p)/:postId/edit"
  />
</div>
`;

exports[`shows NotFound if a currentUser is loaded and the community does not exist 1`] = `<withRouter(Connect(NotFound)) />`;
